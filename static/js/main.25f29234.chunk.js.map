{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TexthtmlForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","value","onChange","event","target","rows","newText","toUpperCase","showAlert","split","join","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","heading","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.25f29234.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"\">About</a>\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      \r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string}","import React, {useState} from 'react'\r\n\r\nexport default function TexthtmlForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Converting to Upper case\" + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to Upper case\",\"success\")\r\n    }\r\n    const handledownClick = ()=>{\r\n        // console.log(\"Converting to Lower case\" + text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to Lower case\",\"success\")\r\n    }\r\n    const handleOnChnage=(event) =>{\r\n        // console.log(\"On change\")\r\n        setText(event.target.value)\r\n    }\r\n    const handleCompare =()=>{\r\n        // const curLen = text.length()\r\n        // const ele = getEle\r\n        \r\n    }\r\n    const handleCopy =()=>{\r\n        var text =  document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text has been copied\",\"success\")\r\n    }\r\n    const handleExtraSpace=()=>{\r\n        let newText =text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra space has been removed\",\"success\")\r\n    }\r\n\r\n    const [text, setText] = useState(\"Enter your Text here\");\r\n    return (\r\n            <>\r\n            <div className=\"container\" id=\"statement\">\r\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat blanditiis provident ducimus distinctio unde, in excepturi aliquam ipsam dicta delectus, vero quam odit esse possimus illum libero dolorum nisi adipisci similique exercitationem ratione impedit, iure voluptas est. Culpa vitae eum facilis odio beatae magnam eligendi qui alias laborum quo, aut quas quis quae architecto vel eius nobis rem amet earum. Assumenda excepturi vero deleniti amet natus, accusantium qui. Nobis, voluptates illo! Amet earum sed inventore ullam error laborum perspiciatis esse accusantium magnam quas consequuntur aperiam vitae dolorem reiciendis quia possimus reprehenderit fugit laudantium placeat, explicabo molestias fugiat. Ratione, impedit vel.</p>\r\n            </div>\r\n        <div  className=\"container\">\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"myBox\" className=\"form-label\">What can I do for you</label>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChnage} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Uppper Casse</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpace}>remove extra space</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handledownClick}>Lower Casse</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCompare}>compare</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>copy</button>\r\n        </div>\r\n        <div className=\"container\">\r\n            <h3>Summary</h3>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{text}</p>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}  \r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\n// import About from './Components/About';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   //Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() =>\n      setAlert(null)\n      , 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('light')\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n    else {\n      setMode('dark')\n      showAlert(\"dark mode has been enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TestTing\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to Analyze\" />\n            {/* </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}